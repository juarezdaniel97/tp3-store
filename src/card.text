import React from 'react'
import { useCarritoContext } from '../../contexts/CarritoContext';
import { X, ShoppingBag } from 'lucide-react';

const Card = () => {
    const { carrito, decreaseQuantity, deleteProduct, getTotalPrice } = useCarritoContext();

    if (carrito.length === 0) {
        return (
            <div className="w-full bg-white dark:bg-gray-800 rounded-lg shadow-lg p-4">
                <div className="flex justify-between items-center mb-4">
                    <h3 className="text-gray-800 dark:text-white font-medium">Tu carrito</h3>
                </div>
                <div className="flex flex-col items-center py-6 text-center">
                    <ShoppingBag className="text-gray-400 dark:text-gray-500 mb-2" size={40} />
                    <p className="text-gray-600 dark:text-gray-400">Tu carrito está vacío</p>
                </div>
            </div>
        );
    }

    return (
        <div className="w-full bg-white dark:bg-gray-800 rounded-lg shadow-lg p-4 max-h-96 overflow-y-auto">
            <div className="flex justify-between items-center mb-4">
                <h3 className="text-gray-800 dark:text-white font-medium">Tu carrito</h3>
            </div>
            
            <div className="space-y-3">
                {carrito.map(item => (
                    <div key={item.id} className="flex items-center space-x-3 bg-slate-100 dark:bg-gray-700/50 p-2 rounded-lg">
                        <div className="h-14 w-14 bg-slate-200 dark:bg-gray-600 rounded flex items-center justify-center overflow-hidden">
                            {item.image ? (
                                <img src={item.image} alt={item.name} className="h-12 w-12 object-cover" />
                            ) : (
                                <div className="text-xs text-gray-500 dark:text-gray-400 text-center">No image</div>
                            )}
                        </div>
                        <div className="flex-1 min-w-0">
                            <h4 className="text-sm text-gray-800 dark:text-white truncate">{item.name}</h4>
                            <div className="flex justify-between items-center mt-1">
                                <p className="text-sm text-indigo-600 dark:text-indigo-400">${item.price.toFixed(2)}</p>
                                <div className="flex items-center space-x-2">
                                    <button 
                                        className="w-6 h-6 flex items-center justify-center bg-slate-200 hover:bg-slate-300 dark:bg-gray-600 dark:hover:bg-gray-500 text-gray-800 dark:text-white rounded transition-colors"
                                        onClick={() => decreaseQuantity(item.id, item.quantity - 1)}
                                        aria-label="Decrease quantity"
                                    >
                                        -
                                    </button>
                                    <span className="text-sm text-gray-800 dark:text-white min-w-[1rem] text-center">{item.quantity}</span>
                                    <button 
                                        className="w-6 h-6 flex items-center justify-center bg-slate-200 hover:bg-slate-300 dark:bg-gray-600 dark:hover:bg-gray-500 text-gray-800 dark:text-white rounded transition-colors"
                                        onClick={() => decreaseQuantity(item.id, item.quantity + 1)}
                                        aria-label="Increase quantity"
                                    >
                                        +
                                    </button>
                                </div>
                            </div>
                        </div>
                        <button 
                            className="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-white transition-colors flex-shrink-0"
                            onClick={() => deleteProduct(item.id)}
                            aria-label="Remove item"
                        >
                            <X size={16} />
                        </button>
                    </div>
                ))}
            </div>
            
            <div className="mt-4 pt-3 border-t border-slate-200 dark:border-gray-700">
                <div className="flex justify-between mb-4">
                    <span className="text-gray-600 dark:text-gray-300">Total:</span>
                    <span className="text-gray-800 dark:text-white font-medium">${getTotalPrice().toFixed(2)}</span>
                </div>
                
                <button className="w-full bg-indigo-600 hover:bg-indigo-700 text-white py-2 px-4 rounded-lg transition-colors">
                    Finalizar compra
                </button>
            </div>
        </div>
    );
}

export default Card;